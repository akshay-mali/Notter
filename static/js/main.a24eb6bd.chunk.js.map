{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/authentication/Signup.js","components/authentication/Profile.js","components/authentication/Login.js","components/authentication/PrivateRoute.js","components/authentication/ForgotPassword.js","components/authentication/UpdateProfile.js","hooks/useStorage.js","components/ProgressBar.js","components/Modal.js","components/Navbar.js","hooks/useFirebase.js","components/Note.js","components/NotesContainer.js","components/Dashboard.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","unsubscribe","onAuthStateChanged","a","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","confirmPasswordRef","error","setError","history","useHistory","e","preventDefault","current","push","className","onSubmit","type","ref","required","disabled","to","Profile","handleLogout","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","defaultValue","placeholder","useStorage","data","progress","setProgress","url","setUrl","done","setDone","collectionRef","collection","createDatabaseEntry","createdAt","add","imageURL","title","paragraph","list","file","storageRef","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","ProgressBar","setData","setIsUploading","style","width","Modal","showModal","setShowModal","modalData","setFile","setList","isUploading","listInputRef","titleRef","paragraphRef","types","id","htmlFor","src","height","alt","onChange","selected","target","files","console","log","includes","Object","keys","map","key","index","task","checked","newList","taskValue","trim","uuidv4","updateObj","doc","update","delete","length","Navbar","useFirestore","notes","setNotes","unsub","orderBy","onSnapshot","documents","forEach","Note","note","handleEditNoteOnClick","borderBottom","val","handleChecked","textDecoration","NotesContainer","toString","Dashboard","setModalData","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a24eb6bd.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport const projectStorage = firebase.storage();\r\nexport const projectFirestore = firebase.firestore();\r\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport default app;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from \"../firebase.js\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [ loading, setLoading ] = useState(true);\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function login(email, password){\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return currentUser.updateEmail(email);\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return currentUser.updatePassword(password);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        const getUser = () => {\r\n            unsubscribe = auth.onAuthStateChanged(\r\n                async user => {\r\n                        setLoading(false);\r\n                        setCurrentUser(user);\r\n                }\r\n            );\r\n        };\r\n        getUser();\r\n        return function cleanup() {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            { !loading && children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const confirmPasswordRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [ error, setError ] = useState('');\r\n    const [ loading, setLoading ] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        if(passwordRef.current.value !== confirmPasswordRef.current.value){\r\n            return setError('Passwords donot match');\r\n        }\r\n\r\n        try{\r\n            setLoading(true);\r\n            setError('');\r\n            await signup(emailRef.current.value, passwordRef.current.value);\r\n            setLoading(false);\r\n            history.push(\"/\");\r\n        }catch{\r\n            setLoading(false);\r\n            setError(\"Failed to create an account\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"authform__container\">\r\n            <h2 className=\"authform__title\">Signup</h2>\r\n            {error && <p className=\"authform__error\"> { error } </p>}\r\n            <form onSubmit={handleSubmit} >\r\n                <div className=\"authform__input-field\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" ref={emailRef} required ></input>\r\n                </div>\r\n                <div className=\"authform__input-field\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ref={passwordRef} required ></input>\r\n                </div>\r\n                <div className=\"authform__input-field\">\r\n                    <label>ConfirmPassword</label>\r\n                    <input type=\"password\" ref={confirmPasswordRef} required ></input>\r\n                </div>\r\n                <div className=\"authform__input-field\">\r\n                    <button disabled={loading} type=\"Submit\" className=\"authform__btn\">Signup</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"authform__direct\">Already have a account? <Link to=\"/login\">Login</Link></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React, {useState} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nfunction Profile() {\r\n    const [error, setError] = useState('');\r\n    const {currentUser, logout} = useAuth();\r\n    const history = useHistory();\r\n\r\n    const handleLogout = async () => {\r\n        setError('');\r\n        try {\r\n            await logout();\r\n            history.push(\"/login\");\r\n        } catch {\r\n            setError(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"authform__container\">\r\n            <h2 className=\"authform__title\">Profile</h2>\r\n            {error && <p className=\"authform__error\"> { error } </p>}\r\n            <strong>Email : </strong> <span>{currentUser.email}</span>\r\n            <p className=\"authform__direct\"><Link to=\"/\" className=\"button\">Go to Dasahboard</Link></p>\r\n            <p className=\"authform__direct\"><Link to=\"/update-profile\" className=\"button\">Update Profile</Link></p>\r\n            <button onClick={handleLogout} className=\"authform__btn\">Logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [ error, setError ] = useState('');\r\n    const [ loading, setLoading ] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        try{\r\n            setLoading(true);\r\n            setError('');\r\n            await login(emailRef.current.value, passwordRef.current.value);\r\n            setLoading(false);\r\n            history.push(\"/\");\r\n        }catch{\r\n            setLoading(false);\r\n            setError(\"Failed to sign in.\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"authform__container\">\r\n            <h2 className=\"authform__title\">Login</h2>\r\n            {error && <p className=\"authform__error\"> { error } </p>}\r\n            <form onSubmit={handleSubmit} >\r\n                <div className=\"authform__input-field\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" ref={emailRef} required ></input>\r\n                </div>\r\n                <div className=\"authform__input-field\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ref={passwordRef} required ></input>\r\n                </div>\r\n                <div className=\"authform__forgotpass\"> <Link to=\"/forgot-password\">Forgot your Password?</Link> </div>\r\n                <div className=\"authform__input-field\">\r\n                    <button disabled={loading} type=\"Submit\" className=\"authform__btn\">Login</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"authform__direct\">Need an account? <Link to=\"/signup\">Signup</Link></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nfunction PrivateRoute({component: Component, ...rest}) {\r\n\r\n    const {currentUser} = useAuth();\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\"/>;\r\n            }}\r\n        >\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction ForgotPassword() {\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [ error, setError ] = useState('');\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        try{\r\n            setLoading(true);\r\n            setMessage('');\r\n            setError('');\r\n            await resetPassword(emailRef.current.value);\r\n            setMessage('Check your inbox for further instructions.')\r\n        }catch{\r\n            setError(\"Failed to Reset Password\");\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"authform__container\">\r\n            <h2 className=\"authform__title\">Password Reset</h2>\r\n            {message && <p> { message } </p>}\r\n            {error && <p className=\"authform__error\"> { error } </p>}\r\n            <form onSubmit={handleSubmit} >\r\n                <div className=\"authform__input-field\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" ref={emailRef} required ></input>\r\n                </div>\r\n                <div className=\"authform__input-field\">\r\n                    <button disabled={loading} type=\"Submit\" className=\"authform__btn\">Reset Password</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"authform__direct\">Already have an account? <Link to=\"/login\">Login</Link> </div>\r\n            <div className=\"authform__direct\">Need an account? <Link to=\"/signup\">Signup</Link></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const confirmPasswordRef = useRef();\r\n    const {currentUser, updateEmail, updatePassword } = useAuth();\r\n    const [ error, setError ] = useState('');\r\n    const [ loading, setLoading ] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        setError('');\r\n        setLoading(true);\r\n\r\n        if(passwordRef.current.value !== confirmPasswordRef.current.value){\r\n            return setError('Passwords donot match');\r\n        }\r\n\r\n        const promises = [];\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value));\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value));\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            setLoading(false);\r\n            history.push(\"/profile\");\r\n        }).catch(() => {\r\n            setLoading(false);\r\n            setError(\"Failed to update account\");\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"authform__container\">\r\n            <h2 className=\"authform__title\">Update Profile</h2>\r\n            {error && <p> { error } </p>}\r\n            <form onSubmit={handleSubmit} >\r\n                <div className=\"authform__input-field\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" ref={emailRef} required defaultValue={currentUser.email} ></input>\r\n                </div>\r\n                <div className=\"authform__input-field\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\" ></input>\r\n                </div>\r\n                <div className=\"authform__input-field\">\r\n                    <label>ConfirmPassword</label>\r\n                    <input type=\"password\" ref={confirmPasswordRef} placeholder=\"Leave blank to keep the same\" ></input>\r\n                </div>\r\n                <div className=\"authform__input-field\">\r\n                    <button disabled={loading} type=\"Submit\" className=\"authform__btn\">Update</button>\r\n                </div>\r\n            </form>\r\n            <div className=\"authform__direct\"><Link to=\"/profile\">Cancle</Link></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase';\r\n\r\nconst useStorage = (data) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n  const [done, setDone] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const collectionRef = projectFirestore.collection('notes');\r\n\r\n    const createDatabaseEntry = async(url) => {\r\n      const createdAt = timestamp();\r\n        await collectionRef.add({ \r\n          imageURL: url, \r\n          title: data.title,\r\n          paragraph: data.paragraph,\r\n          list: data.list,\r\n          createdAt: createdAt\r\n        });\r\n      setUrl(url);\r\n      setDone(true);\r\n    } \r\n\r\n    if(data.file){\r\n      const storageRef = projectStorage.ref(data.file.name);\r\n      \r\n      storageRef.put(data.file).on('state_changed', (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      }, (err) => {\r\n        setError(err);\r\n      }, async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        await createDatabaseEntry(url);\r\n      });\r\n    }else{\r\n      createDatabaseEntry(null)\r\n    }\r\n  }, [data]);\r\n\r\n  return { progress, url, error, done };\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\nconst ProgressBar = ({ data, setData, setIsUploading }) => {\r\n  const { progress, done } = useStorage(data);\r\n\r\n  useEffect(() => {\r\n    if (done) {\r\n      setData(null);\r\n      setIsUploading(false);\r\n    }\r\n  }, [done, setData, setIsUploading]);\r\n\r\n  return (\r\n    <div className=\"progress-bar\" style={{width : progress + '%'}}></div>\r\n  );\r\n} \r\n\r\nexport default ProgressBar;","import React, { useState, useRef, useEffect } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ProgressBar from './ProgressBar'\r\nimport { projectFirestore } from '../firebase';\r\n\r\n\r\nfunction Modal({ showModal, setShowModal, modalData }) {\r\n    const [error, setError] = useState(null);\r\n    const [file, setFile] = useState(null)\r\n    const [list, setList] = useState({})\r\n    const [data, setData] = useState(null)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n\r\n    const listInputRef = useRef('');\r\n    const titleRef = useRef('')\r\n    const paragraphRef = useRef('')\r\n\r\n    const collectionRef = projectFirestore.collection('notes');\r\n\r\n    useEffect(() => {\r\n       if(modalData){\r\n            titleRef.current.value = modalData.title;\r\n            paragraphRef.current.value = modalData.paragraph;\r\n            setList({...modalData.list});\r\n            // setFile(null);\r\n       }\r\n    }, [modalData])\r\n\r\n    const types = ['image/png', 'image/jpeg', 'image/jpg'];\r\n\r\n    const handleFileChange = (e) => {\r\n      let selected = e.target.files[0];\r\n    console.log(selected);\r\n      if(selected){\r\n        if (types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError('Please select an image file (png or jpg)');\r\n        }\r\n      }\r\n    };\r\n\r\n    const addToList = () =>{\r\n        if(listInputRef.current.value === ''){\r\n            setError('Task cannot be empty string');\r\n            return;\r\n        }\r\n        let taskValue = listInputRef.current.value.trim();\r\n        let newList = {...list};\r\n        let id = uuidv4();\r\n        newList[id] = {\r\n            task: taskValue,\r\n            done: false\r\n        };\r\n        setList(newList);\r\n        listInputRef.current.value = '';\r\n    }\r\n\r\n    const onCreateNote = () => {\r\n        if(file === null && titleRef.current.value.trim() === '' && paragraphRef.current.value.trim() === '' && Object.keys(list).length === 0){\r\n            setError('All fields cannot be empty, atleast one must be filled');\r\n            return;\r\n        }\r\n        setData({\r\n            file: file,\r\n            title: titleRef.current.value.trim(),\r\n            paragraph: paragraphRef.current.value.trim(),\r\n            list: list\r\n        });\r\n        setIsUploading(true);\r\n        // TODO : Somehow reset this values after uploadad to database\r\n        titleRef.current.value = '';\r\n        paragraphRef.current.value = '';\r\n        setList({});\r\n        setFile(null);\r\n        setError('');\r\n    }\r\n\r\n    const onDeleteNote = () => {\r\n        collectionRef.doc(modalData.id).delete().then(() => {\r\n            setShowModal(false);\r\n        }).catch((error) => {\r\n            setError(\"Error removing document: \", error);\r\n        });\r\n        \r\n    }\r\n\r\n    const onUpdateNote = () => {\r\n        let updateObj = {};\r\n        if(titleRef.current.value.trim() !== modalData.title){\r\n            updateObj.title = titleRef.current.value.trim();\r\n        }\r\n        if(paragraphRef.current.value.trim() !== modalData.paragraph){\r\n            updateObj.paragraph = paragraphRef.current.value.trim();\r\n        }\r\n        updateObj.list = list;\r\n        if(file !== null){\r\n            updateObj.file = file\r\n        }\r\n        collectionRef.doc(modalData.id).update(updateObj)\r\n        .then(() => setShowModal(false))\r\n        .catch(error => setError(\"Error while updating: \" + error));\r\n    }\r\n  \r\n\r\n    return (\r\n        <>\r\n            <div className={showModal? \"body-blackout is-blacked-out\" : \"body-blackout\"} onClick={() => setShowModal(false)}></div>\r\n            <div className={showModal? \"popup-modal shadow is--visible\" : \"popup-modal shadow\"} id=\"note-modal\">\r\n                <i className=\"bx bx-x popup-modal__close\" onClick={() => setShowModal(false)}></i>\r\n                <div className=\"popup-modal__container\">\r\n                    <h2>{modalData ? 'Edit Note' : 'New Note'}</h2>\r\n                    {error && <p className=\"error-string\">{error}</p>}\r\n                    <div className=\"input__image input__cotainer\">\r\n                        <div>\r\n                            <label htmlFor=\"file_input\" className=\"img-input-label\">Choose File</label>\r\n                            {file ? file.name : modalData ? 'image cannot be updated righth now!' : 'No file selected'}\r\n                        </div>\r\n                        {modalData.imageURL && <img src={modalData.imageURL} height=\"100\" alt=\"note_image\" />}\r\n                        <input \r\n                            type=\"file\" \r\n                            name=\"file_input\" \r\n                            id=\"file_input\" \r\n                            className=\"img-input\"\r\n                            disabled={modalData ? true : false}\r\n                            onChange={handleFileChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input__title input__cotainer\">\r\n                        <input \r\n                            type=\"text\" \r\n                            id=\"titleInput\" \r\n                            placeholder=\"Title\" \r\n                            className=\"input-box\" \r\n                            ref={titleRef}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input__para input__cotainer\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            id=\"paragraphInput\"  \r\n                            placeholder=\"Paragraph\" \r\n                            className=\"input-box\" \r\n                            ref={paragraphRef}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"input__list input__cotainer\">\r\n                            {\r\n                                Object.keys(list).map((key, index) => (\r\n                                    <div className=\"list-item\" key={key}>\r\n                                        <p className=\"list-item__title\">{list[key].task}</p>\r\n                                        <input\r\n                                            type=\"checkbox\" \r\n                                            checked={list[key].done} \r\n                                            onChange={()=> {\r\n                                                let newList = {...list}\r\n                                                newList[key] = {...list[key], done: !list[key].done}\r\n                                                setList(newList);\r\n                                            }} \r\n                                            name=\"done\"\r\n                                            className=\"list-item__checkbox\" \r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        <div className=\"list-form\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"list-input\" \r\n                                placeholder=\"Enter task\" \r\n                                ref={listInputRef}\r\n                            />\r\n                            <button className=\"add-list-btn\" onClick={addToList}>Add item</button>\r\n                        </div>\r\n                    </div>\r\n                        { data && <ProgressBar data={data} setData={setData} setIsUploading={setIsUploading} />}\r\n                        \r\n                        {\r\n                            modalData ? \r\n                            <div className=\"actions__container\">\r\n                                <button className=\"delete-note-btn\" onClick={onUpdateNote} >Update Note</button> \r\n                                <button className=\"delete-note-btn\" onClick={onDeleteNote} >Delete Note</button> \r\n                            </div>\r\n                            : \r\n                            <button className=\"create-note-btn\" onClick={onCreateNote}>{isUploading? 'Uploading...' : 'Create Note'}</button>\r\n                        }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nfunction Navbar({error, handleLogout}) {\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"nav\">\r\n                <h1 className=\"header__title\">Notter</h1>\r\n                <div className=\"nav-right\">\r\n                    <div className=\"search-box\">\r\n                        <i className='bx bx-search bx-sm'></i>\r\n                        <input type=\"text\" placeholder=\"Search note\" />\r\n                    </div>\r\n                    {error && <p> { error } </p>}\r\n                    <button onClick={handleLogout} className=\"logoutBtn\">Logout</button>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase';\r\n\r\nconst useFirestore = (collection) => {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore.collection(collection)\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot(snap => {\r\n        let documents = [];\r\n        snap.forEach(doc => {\r\n          documents.push({...doc.data(), id: doc.id});\r\n        });\r\n        setNotes(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, [collection]);\r\n\r\n  return { notes };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport { projectFirestore } from '../firebase';\r\n\r\nfunction Note({ note, index, handleEditNoteOnClick }) {\r\n\r\n    const collectionRef = projectFirestore.collection('notes');\r\n\r\n    const handleChecked = (key, val) => {\r\n        collectionRef.doc(note.id).update({\r\n            [`list.${key}.done`]: !val\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <button className=\"card__edit-btn\" onClick={() => handleEditNoteOnClick(note)}><i className='bx bx-pencil bx-xs' ></i></button>\r\n            {note.imageURL && \r\n                <div className=\"card__image\">\r\n                    {note.imageURL && <img src={note.imageURL} alt=\"\" className=\"img\" />}\r\n                </div>\r\n            }\r\n            {(note.title || note.paragraph) && \r\n                <div className=\"card__text\" style={{borderBottom: Object.keys(note.list).length !== 0? '1px solid #ECECEC' : ''}}>\r\n                    <h3 className=\"card__title\">{note.title}</h3>\r\n                    <p className=\"card__paragraph\">\r\n                        {note.paragraph}\r\n                    </p>\r\n                </div>\r\n            }\r\n            {\r\n                Object.keys(note.list).length !== 0 && <ul className=\"card__checklist\">\r\n                    {\r\n                        Object.keys(note.list).map(key => (\r\n                            <li className=\"card__checklist-item completed\" key={key}>\r\n                                <input type=\"checkbox\" name=\"\" checked={note.list[key].done} onChange={() => handleChecked(key, note.list[key].done)}/>\r\n                                <span style={{textDecoration: note.list[key].done? 'line-through' : 'none'}}>{note.list[key].task}</span>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport useFirestore from '../hooks/useFirebase'\r\nimport Note from './Note'\r\n\r\n// const notes = [\r\n//     {\r\n//         id: 1,\r\n//         imageURL: 'https://images.pexels.com/photos/4095545/pexels-photo-4095545.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500',\r\n//         title: 'Time is running out',\r\n//         paragraph: \"I think the biggest reason that time is running out is because you don't know who you are, and don't seem to even be working on that problem diligently.\",\r\n//         list: [\r\n//             {\r\n//                 id: 1,\r\n//                 task: 'Get up at 6am',\r\n//                 done: true\r\n//             },\r\n//             {\r\n//                 id: 2,\r\n//                 task: 'Work on Notter App',\r\n//                 done: false\r\n//             },\r\n//             {\r\n//                 id: 3,\r\n//                 task: 'Do UI design practice',\r\n//                 done: false\r\n//             },\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         imageURL: '',\r\n//         title: 'Trip todo list',\r\n//         paragraph: \"\",\r\n//         list: [\r\n//             {\r\n//                 id: 1,\r\n//                 task: 'Pack your clothes',\r\n//                 done: false\r\n//             },\r\n//             {\r\n//                 id: 2,\r\n//                 task: 'Book hotel rooms',\r\n//                 done: true\r\n//             },\r\n//             {\r\n//                 id: 3,\r\n//                 task: 'Phone, Laptop, Charger, etc',\r\n//                 done: false\r\n//             },\r\n//             {\r\n//                 id: 4,\r\n//                 task: 'Take out money from bank',\r\n//                 done: true\r\n//             },\r\n//             {\r\n//                 id: 5,\r\n//                 task: 'Wash car before trip',\r\n//                 done: false\r\n//             },\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         imageURL: 'https://images.pexels.com/photos/2676642/pexels-photo-2676642.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500',\r\n//         title: 'Rome',\r\n//         paragraph: \"Rome is the capital city and a special comune of Italy, as well as the capital of the Lazio region. The city has been a major human settlement for almost three millennia. With 2,860,009 residents in 1,285 km², it is also the country's most populated comune.\",\r\n//         list: []\r\n//     },\r\n//     {\r\n//         id: 4,\r\n//         imageURL: '',\r\n//         title: 'LP Assignment 3',\r\n//         paragraph: \"This is the last assignment on optimization which will have two parts (in a group of two),Seperate programs to be done for both parts. Assume input to be in 3-address form.:Part-I: Create basic blocks from code that is in 3-address form. Do local optimizations. Create a control flow graph. Find out if there is any unreachable code. Find out natural loops. Find out Dominator blocks.\",\r\n//         list: []\r\n//     },\r\n//     {\r\n//         id: 5,\r\n//         imageURL: 'https://images.pexels.com/photos/827518/pexels-photo-827518.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500',\r\n//         title: '',\r\n//         paragraph: \"\",\r\n//         list: []\r\n//     },\r\n\r\n// ]\r\n\r\nfunction NotesContainer({ handleEditNoteOnClick }) {\r\n    const { notes } = useFirestore('notes');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                {\r\n                    notes &&\r\n                    notes.map((note, index) => {\r\n                        return(\r\n                            <Note note={note} key={note.id.toString()} handleEditNoteOnClick={handleEditNoteOnClick} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotesContainer\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport Modal from './Modal';\r\nimport Navbar from './Navbar';\r\nimport NotesContainer from './NotesContainer';\r\n\r\nfunction Dashboard() {\r\n    const [error, setError] = useState('');\r\n    const {currentUser, logout} = useAuth();\r\n    const history = useHistory();\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalData, setModalData] = useState(null)\r\n\r\n    const handleLogout = async () => {\r\n        setError('');\r\n        try {\r\n            await logout();\r\n            history.push(\"/login\");\r\n        } catch {\r\n            setError(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    const handleNewNoteOnClick = () => {\r\n        setShowModal(true);\r\n        setModalData(null);\r\n    }\r\n\r\n    const handleEditNoteOnClick = (note) => {\r\n        setShowModal(true);\r\n        setModalData(note);\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Navbar handleLogout={handleLogout} error={error} currentUser={currentUser} />\r\n            <button className=\"new-note\" id=\"new-note-btn\" onClick={handleNewNoteOnClick}>\r\n                <i className='bx bx-plus bx-md' ></i>\r\n            </button>\r\n            {showModal && <Modal showModal={showModal} setShowModal={setShowModal} modalData={modalData} />}\r\n            <NotesContainer handleEditNoteOnClick={handleEditNoteOnClick} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import Signup from \"./components/authentication/Signup\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'; \nimport Profile from './components/authentication/Profile';\nimport Login from \"./components/authentication/Login\";\nimport PrivateRoute from \"./components/authentication/PrivateRoute\";\nimport ForgotPassword from \"./components/authentication/ForgotPassword\";\nimport UpdateProfile from \"./components/authentication/UpdateProfile\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <Router>\n      <AuthProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\n\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n        </Switch>\n      </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}